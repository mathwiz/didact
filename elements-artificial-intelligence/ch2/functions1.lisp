(cons 1 (cons 2 (cons 3 nil)))
(first (cons 1 (cons 2 (cons 3 nil))))
(rest (cons 1 (cons 2 (cons 3 nil))))
(first nil)
(rest nil)
(setf A (list 1 2 3 4))
(cadr A)
(cddr A)
(caddr A)
(cdddr A)
(cadddr A)
(last A)
(butlast A)
(butlast '(a b c d))
(atom T)
(atom nil)
(atom A)
(null nil)
(null T)
(null A)
(listp (+ 1 2))
(listp '(+ 1 2))
(listp A)
(listp nil)
(consp A)
(consp nil)
(numberp 3)
(floatp 3)
(floatp 3.0)
(rationalp 3)
(complexp 3)
(complexp #c(3 3))
(zerop 0)
(evenp 0)
(oddp 1)
(plusp 1)
(minusp -1)
(stringp "a")
(setf M (make-array '(2 3) :initial-contents '((1 2 3) (4 5 6))))
(arrayp M)
(setf V #(1 2 3 4))
(setq V1 #(1 2 3 4))
(vectorp V)
(characterp #\a)
(equalp '(a b) (cons 'a (cons 'b nil)))
(equalp V V1)
(equal  '(a b) (cons 'a (cons 'b nil)))
(equal V V1)
(equalp 1 1)
(equal 1 1)
(eq 1 1)
(eql 1 1)
(= 1 1)

